# The configuration file follows a structure similar to what you would find for Microsoft Windows INI files.
# For further information on the
# configuration file format see the Python ConfigParser documentation at:
#
#   http://docs.python.org/library/configparser.html
#
#   More instrument about the Python Agent read the documentation <Python Agent User Guid.pdf>
#

# tingyun Agent config section
[tingyun]

# The license key to the server. You must specify the license key associated with your tingyun account. This key binds
# the Python Agent's data to your account in the tingyun service.
# eg: license_key = 123-456-789
# license_key = 999-999-999
license_key = 5dfaf3c4-d2e8-11e6-868c-000c29957760


# The global switch about the agent. default is True, support True, False, on, off case insensitive
enabled = True

# The application name, default use 'Python App' in internal
# app_name = Python App
app_name = ubuntu14-py27-tornado4.4-flask0.11


# Sets the name of a file to log agent messages to. It's useful for debugging any issues. Whatever you set this to you
# must ensure that the permissions for the containing directory and the file itself are correct, and that the user that
# your web application runs as can write to the file. If it's not able to write the log, the log always output to
# standard error output.
# eg: log_file = /tmp/tingyun.log
log_file = /home/nb/logs/test_flask/tornado_server_agent.log

# The agent log level, more opition looking for python logging module
# default value DEBUG will be used.
# eg: log_level = info
log_level = DEBUG

# data audit mode, if True all the upload data to server will be recored to log file and level INFO is used to
#  default False, support True, False, on, off, case insensitive
# eg: audit_mode = False
audit_mode = True

# If True, use https to upload data
# default True
ssl = False

# If True agent will auto naming the action name
# default True
# eg: auto_action_naming = True
auto_action_naming = False


# if True, the traced sql will record to log file only.
# default False
# eg: action_tracer.log_sql = False
action_tracer.log_sql = False

# if True, the similar urls will be merge to one.
# default is True.
# eg: urls_merge = True
urls_merge = True

# The version of the ssl verification package `certifi` later than `2015.04.28` use the sha256 encryption to verfy the
# validation of the `Certificate Authority`. and the root Certificate of our data center use sha1 encryption, this will
# cause `SSL3_GET_SERVER_CERTIFICATE:certificate verify failed` error.
# if you use version of the `certifi` later than `2015.04.28`, you should set this setting to False to avoid this error
# default False, not verify the certification of our  data center.
verify_certification = False

# 私有化
[tingyun:private]
host = 192.168.2.201
port = 9101